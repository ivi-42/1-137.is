<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>137.is</title>
    <link>https://137.is/</link>
    <description>Recent content on 137.is</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>137.is</copyright>
    <lastBuildDate>Fri, 24 Mar 2023 15:40:02 +0100</lastBuildDate><atom:link href="https://137.is/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sudoku, an illogic approach</title>
      <link>https://137.is/blog/sudoku/</link>
      <pubDate>Fri, 24 Mar 2023 15:40:02 +0100</pubDate>
      
      <guid>https://137.is/blog/sudoku/</guid>
      <description>Sudoku </description>
    </item>
    
    <item>
      <title>PPO</title>
      <link>https://137.is/blog/ppo/</link>
      <pubDate>Fri, 30 Dec 2022 15:40:02 +0100</pubDate>
      
      <guid>https://137.is/blog/ppo/</guid>
      <description>PPO I am doing the hugging face Reinforcement Learning Course. It is quite nice, and I though I was going to put some thoughts.
The first corse parameters is about PPO.
Proximal Policy Optimization (PPO) is an algorithm for training reinforcement learning (RL) agents. RL is a type of machine learning where an agent learns to take actions in an environment to maximize a reward signal.
The goal of PPO is to improve the performance of an RL agent by making small, incremental updates to its policy (the strategy the agent uses to choose actions).</description>
    </item>
    
    <item>
      <title>137_is</title>
      <link>https://137.is/page/137_is/</link>
      <pubDate>Wed, 28 Dec 2022 14:50:33 +0100</pubDate>
      
      <guid>https://137.is/page/137_is/</guid>
      <description>test posts This is a test post
package main import &amp;quot;fmt&amp;quot; func main() { fmt.Println(&amp;quot;hello world&amp;quot;) } </description>
    </item>
    
    <item>
      <title>137_is</title>
      <link>https://137.is/posts/posts/</link>
      <pubDate>Wed, 28 Dec 2022 14:50:33 +0100</pubDate>
      
      <guid>https://137.is/posts/posts/</guid>
      <description>test posts This is a test post
package mainimport &amp;quot;fmt&amp;quot;func main() {fmt.Println(&amp;quot;hello world&amp;quot;)}</description>
    </item>
    
    <item>
      <title>137_is a website still under construction</title>
      <link>https://137.is/blog/137_is/</link>
      <pubDate>Wed, 28 Dec 2022 14:49:56 +0100</pubDate>
      
      <guid>https://137.is/blog/137_is/</guid>
      <description>I am still building this website, so each days you&amp;rsquo;ll see something new, something broke and something old, but never something final </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://137.is/about/</link>
      <pubDate>Wed, 28 Dec 2022 14:49:56 +0100</pubDate>
      
      <guid>https://137.is/about/</guid>
      <description>About 137.is a project created by Gianni Pojani, to study some of the most beautiful things that they knows. It is a complex project that unifies many different disciplines, such as mathematics, physics, computer science, philosophy, and art to create the ultimate abstract state machine. The project is still in its infancy, and it is not yet clear what the final form will be, and this is done by design. The project is open source, and anyone can contribute to it, but there will be a set of rules that initially will be decided by the creator, but later will be decided by the community.</description>
    </item>
    
    <item>
      <title>137.is</title>
      <link>https://137.is/blog/hello_world/</link>
      <pubDate>Tue, 27 Dec 2022 15:17:02 +0100</pubDate>
      
      <guid>https://137.is/blog/hello_world/</guid>
      <description>What 137.is? It is a tool that experiment in how a company can work, and see how much a fully distributed system is able to solve problems efficently. This project uses soft computing, on the opposite of hard computing, the terms &amp;ldquo;soft computing&amp;rdquo; and &amp;ldquo;hard computing&amp;rdquo; refer to two different approaches to problem solving. Hard computing, also known as &amp;ldquo;classical computing,&amp;rdquo; refers to the use of traditional, precise algorithms to solve problems.</description>
    </item>
    
  </channel>
</rss>
